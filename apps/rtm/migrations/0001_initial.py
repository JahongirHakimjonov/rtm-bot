# Generated by Django 5.0.8 on 2024-12-10 11:00

import apps.rtm.models.messages
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="BotUsers",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "telegram_id",
                    models.BigIntegerField(unique=True, verbose_name="Telegram ID"),
                ),
                (
                    "username",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Foydalanuvchi nomi",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="Ism"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="Familiya"
                    ),
                ),
                (
                    "full_name",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Ism va Familiya",
                    ),
                ),
                (
                    "phone",
                    models.BigIntegerField(
                        blank=True, null=True, unique=True, verbose_name="Telefon raqam"
                    ),
                ),
                (
                    "language_code",
                    models.CharField(
                        choices=[("uz", "O'zbek tili"), ("ru", "Rus tili")],
                        default="uz",
                        max_length=10,
                        verbose_name="Til",
                    ),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="Faolmi")),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("admin", "Admin"),
                            ("moderator", "Moderator"),
                            ("user", "Foydalanuvchi"),
                        ],
                        default="user",
                        max_length=10,
                        verbose_name="Rol",
                    ),
                ),
            ],
            options={
                "verbose_name": "Bot Foydalanuvchisi",
                "verbose_name_plural": "Bot Foydalanuvchilari",
                "db_table": "bot_users",
            },
        ),
        migrations.CreateModel(
            name="Region",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=255, verbose_name="Viloyat nomi")),
                (
                    "name_uz",
                    models.CharField(
                        max_length=255, null=True, verbose_name="Viloyat nomi"
                    ),
                ),
                (
                    "name_ru",
                    models.CharField(
                        max_length=255, null=True, verbose_name="Viloyat nomi"
                    ),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="Faolmi")),
            ],
            options={
                "verbose_name": "Viloyat",
                "verbose_name_plural": "Viloyatlar",
                "db_table": "regions",
            },
        ),
        migrations.CreateModel(
            name="Science",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=255, verbose_name="Fan nomi")),
                (
                    "name_uz",
                    models.CharField(
                        max_length=255, null=True, verbose_name="Fan nomi"
                    ),
                ),
                (
                    "name_ru",
                    models.CharField(
                        max_length=255, null=True, verbose_name="Fan nomi"
                    ),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="Faolmi")),
            ],
            options={
                "verbose_name": "Fan",
                "verbose_name_plural": "Fanlar",
                "db_table": "sciences",
            },
        ),
        migrations.CreateModel(
            name="Messages",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("chat_id", models.BigIntegerField(verbose_name="Chat ID")),
                ("message_id", models.BigIntegerField(verbose_name="Message ID")),
                ("text", models.TextField(blank=True, null=True, verbose_name="Xabar")),
                (
                    "photo",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="messages",
                        validators=[apps.rtm.models.messages.validate_image_size],
                        verbose_name="Rasm",
                    ),
                ),
                (
                    "is_answered",
                    models.BooleanField(default=False, verbose_name="Javob berildimi"),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="rtm.botusers",
                        verbose_name="Foydalanuvchi",
                    ),
                ),
            ],
            options={
                "verbose_name": "Xabar",
                "verbose_name_plural": "Xabarlar",
                "db_table": "messages",
            },
        ),
        migrations.CreateModel(
            name="Answer",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "text",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="Javob"
                    ),
                ),
                (
                    "image",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="answers",
                        validators=[apps.rtm.models.messages.validate_image_size],
                        verbose_name="Rasm",
                    ),
                ),
                (
                    "message",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="rtm.messages",
                        verbose_name="Xabar",
                    ),
                ),
            ],
            options={
                "verbose_name": "Javob",
                "verbose_name_plural": "Javoblar",
                "db_table": "answers",
            },
        ),
        migrations.AddField(
            model_name="botusers",
            name="region",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="rtm.region",
                verbose_name="Viloyat",
            ),
        ),
        migrations.AddField(
            model_name="botusers",
            name="science",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="rtm.science",
                verbose_name="Fan",
            ),
        ),
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "phone",
                    models.CharField(
                        max_length=20, unique=True, verbose_name="Phone number"
                    ),
                ),
                ("username", models.CharField(max_length=100, verbose_name="Username")),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
                (
                    "science",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="rtm.science",
                        verbose_name="Fan",
                    ),
                ),
            ],
            options={
                "verbose_name": "User",
                "verbose_name_plural": "Users",
                "db_table": "custom_user",
                "ordering": ["-created_at"],
            },
        ),
    ]
